<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>uuid</key>
        <string>1D088FB2-CC94-45DE-A64E-74877F01DDEA</string>
        <key>patterns</key>
        <array>
            <dict>
                <key>begin</key>
                <string>/\*</string>
                <key>captures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.comment.falcon</string>
                    </dict>
                </dict>
                <key>name</key>
                <string>comment.block.falcon</string>
                <key>end</key>
                <string>\*/</string>
            </dict>
            <dict>
                <key>begin</key>
                <string>//</string>
                <key>beginCaptures</key>
                <dict>
                    <key>0</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.comment.falcon</string>
                    </dict>
                </dict>
                <key>name</key>
                <string>comment.line.double-slash.falcon</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>meta.line-continuation.falcon</string>
                        <key>match</key>
                        <string>(?&gt;\\\s*\n)</string>
                    </dict>
                </array>
                <key>end</key>
                <string>$\n?</string>
            </dict>
            <dict>
                <key>comment</key>
                <string>keywords that delimit flow blocks</string>
                <key>name</key>
                <string>keyword.control.flow.falcon</string>
                <key>match</key>
                <string>\b(allp|anyp|as|bless|loop|try|switch|case|select|innerfunc|enum|if|elif|else|for|forfirst|formiddle|forlast|while|with|init|end)\b</string>
            </dict>
            <dict>
                <key>comment</key>
                <string>keywords that delimit flow blocks</string>
                <key>name</key>
                <string>keyword.output.falcon</string>
                <key>match</key>
                <string>\b(print|printl|global|sleep|exit)\b</string>
            </dict>
            <dict>
                <key>name</key>
                <string>entity</string>
                <key>match</key>
                <string>\b(self|sender|in|notin|to|has|hasnt|provides)\b</string>
            </dict>
            <dict>
                <key>name</key>
                <string>constant</string>
                <key>match</key>
                <string>\b(export|load|directive|import|macro)\b</string>
            </dict>
            <dict>
                <key>name</key>
                <string>keyword.operator.arithmetic.falcon</string>
                <key>match</key>
                <string>(%|&amp;|\*\*|\*|\+|\-|/)</string>
            </dict>
            <dict>
                <key>name</key>
                <string>keyword.operator.assignment.falcon</string>
                <key>match</key>
                <string>=</string>
            </dict>
            <dict>
                <key>name</key>
                <string>keyword.operator.other.falcon</string>
                <key>match</key>
                <string>\||~|&gt;|!=|&gt;&gt;|=&gt;|\?</string>
            </dict>
            <dict>
                <key>name</key>
                <string>markup.heading</string>
                <key>match</key>
                <string>(|)|[|]|;|,</string>
            </dict>
            <dict>
                <key>name</key>
                <string>punctuation.separator.other.falcon</string>
                <key>match</key>
                <string>:</string>
            </dict>
            <dict>
                <key>name</key>
                <string>constant.numeric.falcon</string>
                <key>match</key>
                <string>(?&lt;![\d.])\s0x[a-fA-F\d]+|\b\d+(\.\d+)?([eE]-?\d+)?|\.\d+([eE]-?\d+)?</string>
            </dict>
            <dict>
                <key>comment</key>
                <string>Functions and classes</string>
                <key>name</key>
                <string>storage.falcon</string>
                <key>match</key>
                <string>\b(class|function|object|lambda|macro|static)\b</string>
            </dict>
            <dict>
                <key>comment</key>
                <string>keyword operators that evaluate to true or false</string>
                <key>name</key>
                <string>keyword.operator.logical.falcon</string>
                <key>match</key>
                <string>\b(and|in|is|not|or)\b</string>
            </dict>
            <dict>
                <key>name</key>
                <string>constant.language.falcon</string>
                <key>match</key>
                <string>\b(nil|true|false)\b</string>
            </dict>
            <dict>
                <key>name</key>
                <string>keyword.falcon</string>
                <key>match</key>
                <string>\b(break|continue|return|launch|from|give|raise|pass|catch|default)\b</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#string</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#singlestring</string>
            </dict>
        </array>
        <key>name</key>
        <string>Falcon</string>
        <key>scopeName</key>
        <string>source.falcon</string>
        <key>fileTypes</key>
        <array>
            <string>fal</string>
            <string>fas</string>
        </array>
        <key>foldingStopMarker</key>
        <string>(?x)
    (   (^|;) \s*+ end   \s*+ ([#].*)? $
    |   (^|;) \s*+ end \. .* $
    |   ^     \s*+ [}\]] ,? \s*+ ([#].*)? $
    |   [#] .*? \(end\) \s*+ $    # Sune’s special marker
    |   ^=end
    |^\s*\]
    )</string>
        <key>foldingStartMarker</key>
        <string>(?x)^
	    (\s*+
	        (init|class|function(?!.*\bend\s*$)
	        |\[\s*$
	        |if
	        |else
	        |case
	        |for|while|until
	         |^=begin
	        |(  "(\\.|[^"])*+"         # eat a double quoted string
	         | '(\\.|[^'])*+'             # eat a single quoted string
	         |   [^#"']                    # eat all but comments and strings
	         )*
	         (                        \s   (do|begin|case)
	         | (?&lt;!\$)[-+=&amp;|*/~%^&lt;&gt;~] \s*+ (if|unless)
	         )
	        )\b
	        (?! [^;]*+ ; .*? \bend\b )
	    |(  "(\\.|[^"])*+"             # eat a double quoted string
	     | '(\\.|[^'])*+'                 # eat a single quoted string
	     |   [^#"']                        # eat all but comments and strings
	     )*
	     ( \{ (?!  [^}]*+ \} )
	     | \[ (?! [^\]]*+ \] )
	     )
	    ).*$
	|   [#] .*? \(fold\) \s*+ $         # Sune’s special marker
	</string>
        <key>repository</key>
        <dict>
            <key>singlestring</key>
            <dict>
                <key>begin</key>
                <string>(')</string>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.end.falcon</string>
                    </dict>
                </dict>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.begin.falcon</string>
                    </dict>
                </dict>
                <key>name</key>
                <string>string.quoted.double.scheme</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>constant.character.escape.falcon</string>
                        <key>match</key>
                        <string>\\.</string>
                    </dict>
                </array>
                <key>end</key>
                <string>(')</string>
            </dict>
            <key>string</key>
            <dict>
                <key>begin</key>
                <string>(")</string>
                <key>endCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.end.falcon</string>
                    </dict>
                </dict>
                <key>beginCaptures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.begin.falcon</string>
                    </dict>
                </dict>
                <key>name</key>
                <string>string.quoted.double.scheme</string>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>name</key>
                        <string>constant.character.escape.falcon</string>
                        <key>match</key>
                        <string>\\.</string>
                    </dict>
                </array>
                <key>end</key>
                <string>(")</string>
            </dict>
        </dict>
        <key>firstLineMatch</key>
        <string>^#!/.*\bfalcon\b</string>
    </dict>
</plist>
